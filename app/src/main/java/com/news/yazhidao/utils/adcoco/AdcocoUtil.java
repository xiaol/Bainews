package com.news.yazhidao.utils.adcoco;import android.app.Activity;import android.content.pm.ApplicationInfo;import android.content.pm.PackageManager;import android.view.View;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.ListView;import android.widget.TextView;import android.widget.Toast;import com.etsy.android.grid.HeaderViewListAdapter;import com.lostip.sdk.ad.custom.AdCocoaAPI;import com.lostip.sdk.ad.custom.AdCocoaCallback;import com.lostip.sdk.ad.custom.AdCocoaDetail;import com.lostip.sdk.ad.custom.AdCocoaPoint;import com.news.yazhidao.R;import com.news.yazhidao.entity.NewsDetail;import com.news.yazhidao.entity.NewsFeed;import com.news.yazhidao.utils.DensityUtil;import com.news.yazhidao.utils.adapter.Logs;import com.nostra13.universalimageloader.core.ImageLoader;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;/** * Created by Administrator on 2015/6/10. */public class AdcocoUtil {    private static List cache = new ArrayList();    private static final java.lang.String ADCOCO_CHANNEL = "UMENG_CHANNEL";    private static final String ADCOCO_CHANNEL_VALUE = "adcoco";    public static Map<Integer, AdCocoaDetail> map = new HashMap<Integer, AdCocoaDetail>();    public int adaptercount;    public static boolean on = true;    public static int ct = 10;    public static int index;    public static int five = -1;    public static void ad(final int position, View convertView, ArrayList<NewsFeed> mMiddleNewsArr) {        if (!on) {            return;        }        try {            if (map.containsKey(-1) && position - five == ct && convertView != null) {                setData(position, convertView, -1);            } else if (map.containsKey(position) && convertView != null) {                setData(position, convertView, position);            } else {                View v = convertView.findViewById(R.id.adly);                if (v != null) {                    v.setVisibility(View.GONE);                }            }        } catch (Exception e) {            e.printStackTrace();        }    }    private static void setData(int position, final View convertView, int key) {        if (((ViewGroup) convertView.findViewById(R.id.adly)).getVisibility() == View.GONE) {//            View view = View.inflate(convertView.getContext(), R.layout.ad_item, null);////            ((ViewGroup) convertView.findViewById(R.id.itemroot)).addView(view);////                    convertView.getLayoutParams().height = convertView.getHeight() + DensityUtil.dip2px(convertView.getContext(), 120f);////            view.getLayoutParams().height = DensityUtil.dip2px(convertView.getContext(), 120f);//            convertView.invalidate();//        } else {            ((ViewGroup) convertView.findViewById(R.id.adly)).setVisibility(View.VISIBLE);        }        Logs.i("==================== " + key);        final AdCocoaDetail ad = map.get(key);        map.remove(key);        if (five < position) {            five = position;        }        convertView.findViewById(R.id.adly).setVisibility(View.VISIBLE);        map.put(position, ad);        ImageLoader.getInstance().displayImage(ad.appIconUrl, (ImageView) ((View) convertView.findViewById(R.id.adly)).findViewById(R.id.ad_icon));        ((TextView) ((View) convertView.findViewById(R.id.adly)).findViewById(R.id.ad_app_name)).setText(ad.appName);        ((TextView) (convertView.findViewById(R.id.adly)).findViewById(R.id.ad_desc)).setText(ad.appDescription);        ((View) convertView.findViewById(R.id.adly)).setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                AdCocoaAPI.clickAd(convertView.getContext(), ad);            }        });        Logs.e("--- appName " + ad.appDescription);        convertView.invalidate();    }    public static void setup(final Activity ay) {        ApplicationInfo appInfo = null;        try {            appInfo = ay.getPackageManager()                    .getApplicationInfo(ay.getPackageName(),                            PackageManager.GET_META_DATA);        } catch (PackageManager.NameNotFoundException e) {            e.printStackTrace();        }        String v =appInfo.metaData.getString(ADCOCO_CHANNEL);        on = v.equals(ADCOCO_CHANNEL_VALUE);        AdCocoaAPI.init(ay);        AdCocoaAPI.setUserId("test-user-id");        AdCocoaAPI.setLogAllowed(true);        AdCocoaAPI                .addOnActivatedCallback(new AdCocoaCallback<AdCocoaPoint>() {                    @Override                    public void onSucceed(AdCocoaPoint result) {                        Toast.makeText(                                ay,                                "Ӧ" +                                        "�ü����ˣ�balance=" + result.balance + " total="                                        + result.total + " used=" + result.used,                                Toast.LENGTH_SHORT).show();                    }                    @Override                    public void onError(int errorCode, String errorMsg) {                    }                });        AdCocoaAPI.queryPoint(ay, new AdCocoaCallback<AdCocoaPoint>() {            @Override            public void onSucceed(AdCocoaPoint result) {                System.out.println("��ȡ�ɹ��ˣ�\n ��" + result.balance                        + "\n �ܹ���û��֣�" + result.total + "\n �ܹ�ʹ�û��֣�"                        + result.used);            }            @Override            public void onError(int errorCode, String errorMsg) {                System.out.println("��ȡ���ִ������� --> " + errorCode + " --> "                        + errorMsg);            }        });    }    public static class AdcocoNewsDetail extends NewsFeed {        public AdCocoaDetail addetail;        public AdcocoNewsDetail(AdCocoaDetail addetail) {            this.addetail = addetail;        }    }    public void insertAdcoco(final List list, final ListView lv, final int size, final int pos) {        if (!on) {            return;        }        if (adaptercount != pos||pos==-1) {            adaptercount = pos;            final int i = getInsertion(size);            if (i == -1) return;            if (cache.size()==0){                new Thread() {                    @Override                    public void run() {                        super.run();                        AdCocoaAPI.queryAdList(lv.getContext(), index, index+=(list.size()/ct+1),                                new AdCocoaCallback<List<AdCocoaDetail>>() {                                    @Override                                    public void onSucceed(List<AdCocoaDetail> result) {                                        cache.addAll(result);                                        update();                                    }                                    @Override                                    public void onError(int errorCode, String errorMsg) {                                        System.out.println(errorMsg);                                    }                                });                    }                }.start();            }//            else if(cache.size()==0){//                new Thread() {//                    @Override//                    public void run() {//                        super.run();//////                        AdCocoaAPI.queryAdList(lv.getContext(), 0, index+=(list.size()/ct+1),//                                new AdCocoaCallback<List<AdCocoaDetail>>() {////                                    @Override//                                    public void onSucceed(List<AdCocoaDetail> result) {////                                        cache.addAll(result);//                                        if(map.containsKey(-1)){//                                            return;//                                        }//                                        map.put(-1, (AdCocoaDetail) cache.remove(0));//////                                    }////                                    @Override//                                    public void onError(int errorCode, String errorMsg) {//                                        System.out.println(errorMsg);//                                    }////                                });////                    }//                }.start();//                return;//            }            else {                update();            }        }    }    public static void update() {        if (map.containsKey(-1)||cache.size()==0) {            return;        }        map.put(-1, (AdCocoaDetail) cache.remove(0));    }    public int getInsertion(int listsize) {        if (listsize > cache.size()*ct) {            return listsize - 1;        }        return -1;    }}